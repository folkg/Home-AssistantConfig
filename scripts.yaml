merry_christmas:
  alias: Merry Christmas Schnookie
  sequence:
  - service: automation.turn_off
    entity_id: automation.media_player_playing_after_dark
  - service: automation.turn_off
    entity_id: automation.media_player_paused_stopped_after_dark
  - delay: 5
  - service: light.turn_on
    data:
      entity_id: light.tv_lights
      brightness: 200
      white_value: 0
      effect: 'Christmas Lights'
  - service: media_player.turn_on
    entity_id: media_player.sony_xbr_65a8h
  - delay: 5
  - service: media_player.play_media
    data:
      entity_id: media_player.sony_xbr_65a8h
      media_content_type: 'image/jpg'
      media_content_id: 'http://1.0.0.7:8123/local/MerryChristmas.jpg'
  - delay: 10
  - service: androidtv.adb_command
    data:
      entity_id: media_player.sony_bravia
      command: "BACK"
  - service: automation.turn_on
    entity_id: automation.media_player_playing_after_dark
  - service: automation.turn_off
    entity_id: automation.media_player_paused_stopped_after_dark
  - service: media_player.select_source
    data:
      entity_id: media_player.spotify_graeme_folk
      source: 'Living Room Soundbar'
  - service: media_player.play_media
    data:
      media_content_type: playlist
      entity_id: media_player.spotify_graeme_folk
      media_content_id: 'https://open.spotify.com/playlist/37i9dQZF1DWTCHbho2Bfok'

loop_audio_master_bedroom:
    alias: Loop Audio Master Bedroom
    sequence:
      - if:
          - alias: "Google Home is off"
            condition: state
            entity_id: media_player.bedroom_assistant
            state: 'off'
        then:
          - service: media_player.volume_mute
            data:
              entity_id: media_player.bedroom_assistant
              is_volume_muted: true
        # set the volume and start looping the audio
      - service: media_player.volume_set
        data:
          volume_level: '{{volume_level}}'
        target:
          entity_id: media_player.bedroom_assistant
      - repeat:
          until:
            - condition: template
              value_template: >-
                {{ state_attr('media_player.bedroom_assistant', 'media_title') != title 
                or states('media_player.bedroom_assistant') != 'idle' }}
          sequence:
            - service: media_player.play_media
              data:
                media_content_type: music
                extra:
                  title: '{{title}}'
                media_content_id: "/media/local/{{file_name}}"
              target:
                entity_id: media_player.bedroom_assistant
            - wait_template: '{{ is_state(''media_player.bedroom_assistant'', ''playing'') }}'
            - service: media_player.volume_mute
              data:
                entity_id: media_player.bedroom_assistant
                is_volume_muted: false
            - delay:
                seconds: 10
            - wait_for_trigger:
                - platform: template
                  value_template: >-
                    {{ state_attr('media_player.bedroom_assistant', 'media_title') == title 
                    and is_state('media_player.bedroom_assistant', 'idle') }}
              timeout: '01:00:05'
    mode: restart
    icon: 'mdi:cast'

loop_audio_inez_bedroom:
    alias: Loop Audio Inez Bedroom
    sequence:
      - service: media_player.volume_set
        data:
          volume_level: '{{volume_level}}'
        target:
          entity_id: media_player.inezs_speaker
      - repeat:
          until:
            - condition: template
              value_template: >-
                {{ state_attr('media_player.inezs_speaker', 'media_title') != title 
                or states('media_player.inezs_speaker') != 'idle' }}
          sequence:
            - service: media_player.play_media
              data:
                media_content_type: music
                extra:
                  title: '{{title}}'
                media_content_id: "/media/local/{{file_name}}"
              target:
                entity_id: media_player.inezs_speaker
            - delay:
                seconds: 10
            - wait_for_trigger:
                - platform: template
                  value_template: >-
                    {{ state_attr('media_player.inezs_speaker', 'media_title') == title 
                    and is_state('media_player.inezs_speaker', 'idle') }}
              timeout: '01:00:05'
    mode: restart
    icon: 'mdi:cast'

android_tv_skip:
    mode: restart
    sequence:
      - service: androidtv.adb_command
        target:
          entity_id: media_player.android_tv
        data:
          command: >-
            sendevent /dev/input/event0 1 113 1 && sendevent /dev/input/event0 0 0 0 &&
            sendevent /dev/input/event0 1 113 0 && sendevent /dev/input/event0 0 0 0
      - repeat:
          count: "{{ count|int }}"
          sequence:
            - service: androidtv.adb_command
              target:
                entity_id: media_player.android_tv
              data:
                command: >-
                  sendevent /dev/input/event0 1 208 1 && sendevent /dev/input/event0 0 0 0 &&
                  sendevent /dev/input/event0 1 208 0 && sendevent /dev/input/event0 0 0 0
      - service: androidtv.adb_command
        target:
          entity_id: media_player.android_tv
        data:
          command: >-
            sendevent /dev/input/event0 1 113 1 && sendevent /dev/input/event0 0 0 0 &&
            sendevent /dev/input/event0 1 113 0 && sendevent /dev/input/event0 0 0 0

return_to_base:
    alias: Return to base
    sequence:
    - service: vacuum.return_to_base
      data:
        entity_id: vacuum.roborock_s4

go_to_garbage:
    alias: Go to the garbage
    sequence:
        service: xiaomi_miio.vacuum_goto
        data:
          x_coord: '20750'
          y_coord: '23800'
        target:
          entity_id: vacuum.roborock_s4
