substitutions:
  device_name: reading_lamp
  friendly_name: Reading Lamp

esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp01_1m
    
  #change the colour temperature on_boot to be less jarring, turn on automatically
  on_boot:
    then:
      - light.turn_on:
          id: light_bulb
          color_temperature: 350 mireds
          white: 1

wifi:
  use_address: table_lamp.local
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${friendly_name}
    password: "51Uv8rKokvrP"

captive_portal:

logger:

ota:

api:
  #disables automatic reboot, will need to physically switch on and off again
  reboot_timeout: 0s 

sensor:
  #wifi signal
  - platform: wifi_signal
    name: ${device_name}_signal
    update_interval: 300s
    filters:
      - sliding_window_moving_average:
          window_size: 12
          send_every: 12
      - delta: 1

#ip address
#text_sensor:
#  - platform: wifi_info
#    ip_address:
#      name: ${device_name}_wifi

output:
  - platform: esp8266_pwm
    id: output_red
    pin: GPIO4
    #max_power: 0.7

  - platform: esp8266_pwm
    id: output_green
    pin: GPIO12
    #max_power: 0.7

  - platform: esp8266_pwm
    id: output_blue
    pin: GPIO14
    #max_power: 0.7

  - platform: esp8266_pwm
    id: output_wwhite
    pin: GPIO13
    max_power: 0.5

  - platform: esp8266_pwm
    id: output_cwhite
    pin: GPIO5
    max_power: 0.5

light:
  - platform: rgbww
    id: light_bulb
    name: ${friendly_name}
    red: output_red
    green: output_green
    blue: output_blue
    cold_white: output_cwhite
    warm_white: output_wwhite
    cold_white_color_temperature: 5000 K
    warm_white_color_temperature: 2000 K
    color_interlock: true

    # Ensure the light turns on by default if the physical switch is actuated.
    restore_mode: ALWAYS_ON