# ##################################
# NodeMCU v3 with deep sleep on a battery pack, fairy lights
# ##################################
# NodeMCU 'VV' --> LED '+' (white wire)
# LED '-' --> MOSFET 2N7000 Drain (black wire)
# NodeMCU 'D1' --> MOSFET 2N7000 Gate (purple wire)
# NodeMCU 'G' --> MOSFET 2N7000 Source (grey wire)

# ##################################
# https://docs.zerynth.com/latest/_images/nodemcu3_comm.jpg
# ##################################

substitutions:
  # https://esphome.io/guides/configuration-types.html#substitutions
  device_name: fairy_lights
  friendly_name: Fairy Lights
  icon: "mdi:string-lights"
  
esphome:
  # https://esphome.io/components/esphome
  name: ${device_name}
  platform: ESP8266
  board: nodemcuv2

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  #disables automatic reboot, will need to long press (8 seconds) to reboot if there are issues
  reboot_timeout: 0s

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${friendly_name}
    password: "51Uv8rKokvrP"

captive_portal:

logger:
  # https://esphome.io/components/logger

api:
  reboot_timeout: 0s

ota:
  # https://esphome.io/components/ota

deep_sleep:
  # https://esphome.io/components/deep_sleep.html
  id: deep_sleep_control
  
sun:
  latitude: 51.040240
  longitude: -114.083140
  id: sun_sun

time:
  - platform: homeassistant
    id: ha_time
    
sensor:
# Documentation: https://esphome.io/components/sensor/adc.html
  - platform: adc
    pin: VCC
    id: voltage

  - platform: template
    name: ${friendly_name} Battery
    device_class: battery
    unit_of_measurement: '%'
    update_interval: 60s
    lambda: |-
      return ((id(voltage).state / 2.98) * 100.00);
    filters:
      - sliding_window_moving_average:
          window_size: 5
          send_every: 5
      - delta: 0.01

  #wifi signal
  - platform: wifi_signal
    name: ${device_name}_signal
    update_interval: 300s
    filters:
      - sliding_window_moving_average:
          window_size: 6
          send_every: 6
      - delta: 1

output:
  - platform: esp8266_pwm
    pin: D1
    id: mosfet_gate

light:
  - platform: monochromatic
    name: ${friendly_name}
    id: leds
    output: mosfet_gate
    restore_mode: ALWAYS_ON
    effects:
      - pulse:
      - pulse:
          name: "Fast Puse"
          transition_length: 0.5s
          update_interval: 0.5s
      - pulse:
          name: "Slow Puse"
          # transition_length: 1s      # defaults to 1s
          update_interval: 2s
    # Put the device to sleep until the next sunset
    # https://github.com/esphome/feature-requests/issues/339
    on_turn_off:
    - delay: 60s
    - if:
        condition:
          light.is_off: leds
        then:
          - deep_sleep.enter:
              id: deep_sleep_control
              sleep_duration: !lambda |-
                auto deep_sleep_time = 24*60*60 * 1000; //defaults to 24 hours
                auto sunset = id(sun_sun).sunset(0);
                if (sunset.has_value()) {
                  deep_sleep_time = (sunset.value().timestamp - id(ha_time).now().timestamp) * 1000;
                  if (deep_sleep_time > 86400000) { //if greater than 24 hours, adjust to today's sunset
                    deep_sleep_time = deep_sleep_time + 24*60*60 * 1000;
                  } else if (deep_sleep_time < 0) { //if in the past, add 24 hours
                    deep_sleep_time = deep_sleep_time + 24*60*60 * 1000;
                  }
                }
                //set the deep sleep, in milliseconds
                ESP_LOGD("Main", "Sunset is: %d", sunset.value().timestamp);
                ESP_LOGD("Main", "Time now is: %d", id(ha_time).now().timestamp);
                ESP_LOGD("Main", "Sleep time is: %d", deep_sleep_time);
                delay(2000);
                return deep_sleep_time;